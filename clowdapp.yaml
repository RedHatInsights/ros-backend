---
apiVersion: v1
kind: Template
metadata:
  name: ros-backend
objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: ros-backend
  spec:
    envName: ${ENV_NAME}
    dependencies:
    - host-inventory
    - rbac
    - engine
    deployments:
    - name: api
      webServices:
        public:
          enabled: true
          apiPath: ros
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        minReplicas: 1
        command: ["sh"]
        args: ["-c", "python -m manage db upgrade && python -m manage seed && gunicorn ros.api.main:app"]
        resources:
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/ros/v1/status
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /api/ros/v1/status
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 3
        env:
          - name: PATH_PREFIX
            value: /api
          - name: CLOWDER_ENABLED
            value: ${CLOWDER_ENABLED}
          - name: ENABLE_RBAC
            value: "${ENABLE_RBAC}"
          - name: DB_POOL_SIZE
            value: ${DB_POOL_SIZE}
          - name: DB_MAX_OVERFLOW
            value: ${DB_MAX_OVERFLOW}
    - name: processor
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        minReplicas: ${{MIN_REPLICAS}}
        command: ["bash"]
        args: ["-c", "python -m ros.processor.main"]
        resources:
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 3
        env:
          - name: CLOWDER_ENABLED
            value: ${CLOWDER_ENABLED}
          - name: GARBAGE_COLLECTION_INTERVAL
            value: ${GARBAGE_COLLECTION_INTERVAL}
          - name: DAYS_UNTIL_STALE
            value: ${DAYS_UNTIL_STALE}
          - name: DB_POOL_SIZE
            value: ${DB_POOL_SIZE}
          - name: DB_MAX_OVERFLOW
            value: ${DB_MAX_OVERFLOW}
    database:
      name: ros
      version: 12
    inMemoryDb: true
    kafkaTopics:
      - topicName: platform.inventory.events
        partitions: 1
      - topicName: platform.engine.results
        partitions: 1
      - topicName: platform.notifications.ingress
        partitions: 1
    testing:
      iqePlugin: ros

    jobs:
    - name: org-id-populator
      podSpec:
        image: quay.io/cloudservices/tenant-utils:latest
        command:
          - ./org-id-column-populator
          - -C
          - -a
          - account
          - -o
          - org_id
          - -t
          - rh_accounts
          - --ean-translator-addr
          - http://${TENANT_TRANSLATOR_HOST}:${TENANT_TRANSLATOR_PORT}
          - --prometheus-push-addr
          - ${PROMETHEUS_PUSHGATEWAY}
        env:
          - name: TENANT_TRANSLATOR_HOST
            value: ${TENANT_TRANSLATOR_HOST}
          - name: TENANT_TRANSLATOR_PORT
            value: ${TENANT_TRANSLATOR_PORT}
          - name: LOG_FORMAT
            value: ${POPULATOR_LOG_FORMAT}
          - name: LOG_BATCH_FREQUENCY
            value: '1s'
        resources:
          limits:
            cpu: 300m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 512Mi

parameters:
- description: Enable rbac needs to be "True" or "False"
  name: ENABLE_RBAC
  value: "True"
- description : ClowdEnvironment name
  name: ENV_NAME
  required: true
- description: min replicas
  name: MIN_REPLICAS
  value: "1"
- description: Image NAME
  name: IMAGE
  required: true
  value: quay.io/cloudservices/ros-backend
- description: Image tag
  name: IMAGE_TAG
  required: true
- description: Initial cpu request.
  displayName: CPU Request
  name: CPU_REQUEST
  required: true
  value: 500m
- description: Initial amount of memory the container will request.
  displayName: Memory Request
  name: MEMORY_REQUEST
  required: true
  value: 1Gi
- description: Maximum amount of memory the Django container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 1Gi
- description: Maximum amount of CPU the build container can use.
  displayName: CPU Limit
  name: CPU_LIMIT
  required: true
  value: '1'
- description: Is clowder enabled
  name: CLOWDER_ENABLED
  value: "True"
- description: The interval at which garbage collection should run (in seconds)
  name: GARBAGE_COLLECTION_INTERVAL
  value: "86400"
- description: Number of days after which data is considered to be outdated
  name: DAYS_UNTIL_STALE
  value: "45"
- description: Host for the EAN to OrgId translator.
  name: TENANT_TRANSLATOR_HOST
  required: true
  value: 'gateway.3scale-dev.svc.cluster.local'
- description: Port for the EAN to OrgId translator.
  name: TENANT_TRANSLATOR_PORT
  value: '8892'
- name: PROMETHEUS_PUSHGATEWAY
  value: "localhost"
- name: POPULATOR_LOG_FORMAT
  value: cloudwatch 
- name: DB_POOL_SIZE
  value: "20"
- name: DB_MAX_OVERFLOW
  value: "20"
