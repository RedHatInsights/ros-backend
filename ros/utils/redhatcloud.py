from ros.lib.config import get_logger
import base64
import json


LOG = get_logger(__name__)


def extract_ids_from_kafka_message(message, headers):
    """
    Get the account_number and platform_id from the Kafka topic message and headers.

    Args:
        message (dict): the "value" attribute of a message from a Kafka
            topic generated by the Sources service
        headers (list[tuple]): the headers of a message from a Kafka topic
            generated by the Sources service

    Returns:
        (account_number, platform_id) (str, str):
            the extracted account number and platform id.
    """
    account_number = get_sources_account_number_from_headers(headers)
    org_id = get_sources_org_id_from_headers(headers)
    if not account_number or not org_id:
        auth_header = get_x_rh_identity_header(headers)
        if not auth_header:
            LOG.error(
                    "Missing expected auth header from message "
                    f"{message}, headers {headers}"
            )
            # Early exit if auth_header does not exist
            return None, None
        if not account_number:
            account_number = auth_header.get("identity", {}).get("account_number")
        else:
            org_id = auth_header.get("identity", {}).get("org_id")
    if not account_number and not org_id:
        LOG.error("Missing expected account number or org_id from message "
                  f"{message}, headers {headers}")

    return account_number, org_id


def get_sources_account_number_from_headers(headers):
    """Get the x-rh-sources-account-number from the headers."""
    for header in headers:
        if header[0] == "x-rh-sources-account-number":
            return header[1]
    return None


def get_sources_org_id_from_headers(headers):
    """Get the x-rh-sources-org-id from the headers."""
    for header in headers:
        if header[0] == "x-rh-sources-org-id":
            return header[1]
    return None


def get_x_rh_identity_header(headers):
    """
    Get the x-rh-identity contents from the Kafka topic message headers.

    Args:
        headers (list[tuple]): the headers of a message from a Kafka topic
            generated by the Sources service

    Returns:
        dict contents of the x-rh-identity header.
    """
    auth_header = {}
    # The headers are a list of... tuples.
    for header in headers:
        if header[0] == "x-rh-identity":
            try:
                auth_header = json.loads(base64.b64decode(header[1]).decode("utf-8"))
                break
            except (UnicodeDecodeError, json.JSONDecodeError) as e:
                LOG.info(f"x-rh-identity header parsing error {e}")
                LOG.info("Raw headers are: {headers}")
                return
    return auth_header
