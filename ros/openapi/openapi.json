{
    "openapi": "3.0.1",
    "info": {
        "title": "Ros-backend API",
        "description": "Flask Backend API for Resource Optimization Service",
        "contact": {},
        "license": {
            "name": "GPLv3",
            "url": "https://www.gnu.org/licenses/gpl-3.0.en.html"
        },
        "version": "v0.1"
    },
    "servers": [
        {
            "url": "{{ PATH_PREFIX }}/{{ APP_NAME }}/v0"
        }
    ],
    "paths": {
        "/status": {
            "get": {
                "summary": "Health check liveness call",
                "description": "A small JSON indicating the application is deployed. This serves as both the liveness and readiness call.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/systems": {
            "get": {
                "summary": "Lists all systems from cloud having performance profile",
                "description": "Lists all systems from cloud having performance profile",
                "operationId": "listSystems",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to return, set -1 to return all",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of items to skip before starting to collect the result set",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Systems"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "RhIdentity": []
                    }
                ]
            }
        },
        "/systems/{inventory_id}": {
            "get": {
                "summary": "Show the system details by given inventory id",
                "description": "Show the system details by given inventory id",
                "parameters": [
                    {
                        "name": "inventory_id",
                        "in": "path",
                        "description": "Inventory ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SystemDetails"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Links": {
                "type": "object",
                "properties": {
                    "first": {
                        "type": "string"
                    },
                    "last": {
                        "type": "string"
                    },
                    "next": {
                        "type": "string"
                    },
                    "previous": {
                        "type": "string"
                    }
                }
            },
            "ListMeta": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer"
                    },
                    "offset" : {
                        "type": "integer"
                    },
                    "count": {
                        "type": "integer"
                    }
                }
            },
            "Systems": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SystemItem"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/Links"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/ListMeta"
                    }
                }
            },
            "SystemItem": {
                "type": "object",
                "properties": {
                    "fqdn": {
                        "type": "string"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "recommendation_count": {
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "performance_score": {
                        "type": "object",
                        "properties": {
                            "memory_score": {
                                "type": "number"
                            },
                            "cpu_score": {
                                "type": "number"
                            },
                            "io_score": {
                                "type": "number"
                            }
                        }
                    },
                    "facts": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            },
            "Status": {
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    }
                }
            },
            "SystemDetails": {
                "type": "object",
                "properties": {
                    "host_id": {
                        "type": "string"
                    },
                    "performance_record": {
                        "type": "object",
                        "properties": {
                            "avg_memory": {
                                "type": "number"
                            },
                            "avg_memory_used": {
                                "type": "number"
                            }
                        }
                    },
                    "performance_score": {
                        "type": "object",
                        "properties": {
                            "memory_score": {
                                "type": "number"
                            },
                            "cpu_score": {
                                "type": "number"
                            },
                            "io_score": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "RhIdentity": {
                "in": "header",
                "name": "x-rh-identity",
                "description": "Base64-encoded JSON identity header provided by 3Scale. Contains an account number of the user issuing the request. Format of the JSON{'identity': {'account_number': '12345678'}}",
                "type": "apiKey"
            }
        }
    }
}
