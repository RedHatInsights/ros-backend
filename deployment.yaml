---
apiVersion: v1
kind: Template
metadata:
  name: ros
objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: ros
  spec:
    envName: ${ENV_NAME}
    pods:
    - name: ros-backend
      image: ${IMAGE}:${IMAGE_TAG}
      minReplicas: ${{MIN_REPLICAS}}
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /api/status
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 35
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 120
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /api/status
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 35
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 120
      resources:
        limits:
          cpu: ${CPU_LIMIT}
          memory: ${MEMORY_LIMIT}
        requests:
          cpu: 200m
          memory: 256Mi
      web: true
      volumes:
      - emptyDir: {}
        name: tmpdir
      volumeMounts:
      - mountPath: /tmp
        name: tmpdir
    kafkaTopics:
    - replicas: 3
      partitions: 64
      topicName: platform.upload.resource-optimization
    database:
      name: ros-db 

parameters:
- description: Cpu limit of service
  name: CPU_LIMIT
  value: 500m
- description: memory limit of service
  name: MEMORY_LIMIT
  value: 512Mi
- name: MIN_REPLICAS
  value: '1'
- description: Image tag
  name: IMAGE_TAG
  required: true
- description: Image name
  name: IMAGE
  value: quay.io/cloudservices/resource-optimization
- description: Determines Clowder deployment
  name: CLOWDER_ENABLED
  value: "false"
- description: ClowdEnv Name
  name: ENV_NAME
  requred: false